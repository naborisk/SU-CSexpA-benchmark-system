// Code generated by ent, DO NOT EDIT.

package taskresult

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the taskresult type in the database.
	Label = "task_result"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRequestPerSec holds the string denoting the request_per_sec field in the database.
	FieldRequestPerSec = "request_per_sec"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldRequestContentType holds the string denoting the request_content_type field in the database.
	FieldRequestContentType = "request_content_type"
	// FieldRequestBody holds the string denoting the request_body field in the database.
	FieldRequestBody = "request_body"
	// FieldResponseCode holds the string denoting the response_code field in the database.
	FieldResponseCode = "response_code"
	// FieldResponseContentType holds the string denoting the response_content_type field in the database.
	FieldResponseContentType = "response_content_type"
	// FieldResponseBody holds the string denoting the response_body field in the database.
	FieldResponseBody = "response_body"
	// FieldThreadNum holds the string denoting the thread_num field in the database.
	FieldThreadNum = "thread_num"
	// FieldAttemptCount holds the string denoting the attempt_count field in the database.
	FieldAttemptCount = "attempt_count"
	// FieldAttemptTime holds the string denoting the attempt_time field in the database.
	FieldAttemptTime = "attempt_time"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// Table holds the table name of the taskresult in the database.
	Table = "task_results"
)

// Columns holds all SQL columns for taskresult fields.
var Columns = []string{
	FieldID,
	FieldRequestPerSec,
	FieldURL,
	FieldMethod,
	FieldRequestContentType,
	FieldRequestBody,
	FieldResponseCode,
	FieldResponseContentType,
	FieldResponseBody,
	FieldThreadNum,
	FieldAttemptCount,
	FieldAttemptTime,
	FieldCreatedAt,
	FieldDeletedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "task_results"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"submit_task_results",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the TaskResult queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRequestPerSec orders the results by the request_per_sec field.
func ByRequestPerSec(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRequestPerSec, opts...).ToFunc()
}

// ByURL orders the results by the url field.
func ByURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldURL, opts...).ToFunc()
}

// ByMethod orders the results by the method field.
func ByMethod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMethod, opts...).ToFunc()
}

// ByRequestContentType orders the results by the request_content_type field.
func ByRequestContentType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRequestContentType, opts...).ToFunc()
}

// ByRequestBody orders the results by the request_body field.
func ByRequestBody(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRequestBody, opts...).ToFunc()
}

// ByResponseCode orders the results by the response_code field.
func ByResponseCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResponseCode, opts...).ToFunc()
}

// ByResponseContentType orders the results by the response_content_type field.
func ByResponseContentType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResponseContentType, opts...).ToFunc()
}

// ByResponseBody orders the results by the response_body field.
func ByResponseBody(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResponseBody, opts...).ToFunc()
}

// ByThreadNum orders the results by the thread_num field.
func ByThreadNum(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldThreadNum, opts...).ToFunc()
}

// ByAttemptCount orders the results by the attempt_count field.
func ByAttemptCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAttemptCount, opts...).ToFunc()
}

// ByAttemptTime orders the results by the attempt_time field.
func ByAttemptTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAttemptTime, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}
