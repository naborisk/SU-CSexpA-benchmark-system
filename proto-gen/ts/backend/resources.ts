/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.21.12
 * source: backend/resources.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/timestamp";
import * as pb_1 from "google-protobuf";
export enum Language {
    PHP = 0,
    GO = 1,
    RUST = 2,
    JAVASCRIPT = 3,
    CSHARP = 4,
    CPP = 5,
    RUBY = 6,
    PYTHON = 7
}
export enum Role {
    CONTESTANT = 0,
    GUEST = 1
}
export class Contest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        year?: number;
        qualifier_start_at?: dependency_1.google.protobuf.Timestamp;
        qualifier_end_at?: dependency_1.google.protobuf.Timestamp;
        qualifier_submit_limit?: number;
        final_start_at?: dependency_1.google.protobuf.Timestamp;
        final_end_at?: dependency_1.google.protobuf.Timestamp;
        final_submit_limit?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("year" in data && data.year != undefined) {
                this.year = data.year;
            }
            if ("qualifier_start_at" in data && data.qualifier_start_at != undefined) {
                this.qualifier_start_at = data.qualifier_start_at;
            }
            if ("qualifier_end_at" in data && data.qualifier_end_at != undefined) {
                this.qualifier_end_at = data.qualifier_end_at;
            }
            if ("qualifier_submit_limit" in data && data.qualifier_submit_limit != undefined) {
                this.qualifier_submit_limit = data.qualifier_submit_limit;
            }
            if ("final_start_at" in data && data.final_start_at != undefined) {
                this.final_start_at = data.final_start_at;
            }
            if ("final_end_at" in data && data.final_end_at != undefined) {
                this.final_end_at = data.final_end_at;
            }
            if ("final_submit_limit" in data && data.final_submit_limit != undefined) {
                this.final_submit_limit = data.final_submit_limit;
            }
        }
    }
    get year() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set year(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get qualifier_start_at() {
        return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 4) as dependency_1.google.protobuf.Timestamp;
    }
    set qualifier_start_at(value: dependency_1.google.protobuf.Timestamp) {
        pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_qualifier_start_at() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get qualifier_end_at() {
        return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 5) as dependency_1.google.protobuf.Timestamp;
    }
    set qualifier_end_at(value: dependency_1.google.protobuf.Timestamp) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_qualifier_end_at() {
        return pb_1.Message.getField(this, 5) != null;
    }
    get qualifier_submit_limit() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set qualifier_submit_limit(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get final_start_at() {
        return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 7) as dependency_1.google.protobuf.Timestamp;
    }
    set final_start_at(value: dependency_1.google.protobuf.Timestamp) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_final_start_at() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get final_end_at() {
        return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 8) as dependency_1.google.protobuf.Timestamp;
    }
    set final_end_at(value: dependency_1.google.protobuf.Timestamp) {
        pb_1.Message.setWrapperField(this, 8, value);
    }
    get has_final_end_at() {
        return pb_1.Message.getField(this, 8) != null;
    }
    get final_submit_limit() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set final_submit_limit(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    static fromObject(data: {
        year?: number;
        qualifier_start_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        qualifier_end_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        qualifier_submit_limit?: number;
        final_start_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        final_end_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        final_submit_limit?: number;
    }): Contest {
        const message = new Contest({});
        if (data.year != null) {
            message.year = data.year;
        }
        if (data.qualifier_start_at != null) {
            message.qualifier_start_at = dependency_1.google.protobuf.Timestamp.fromObject(data.qualifier_start_at);
        }
        if (data.qualifier_end_at != null) {
            message.qualifier_end_at = dependency_1.google.protobuf.Timestamp.fromObject(data.qualifier_end_at);
        }
        if (data.qualifier_submit_limit != null) {
            message.qualifier_submit_limit = data.qualifier_submit_limit;
        }
        if (data.final_start_at != null) {
            message.final_start_at = dependency_1.google.protobuf.Timestamp.fromObject(data.final_start_at);
        }
        if (data.final_end_at != null) {
            message.final_end_at = dependency_1.google.protobuf.Timestamp.fromObject(data.final_end_at);
        }
        if (data.final_submit_limit != null) {
            message.final_submit_limit = data.final_submit_limit;
        }
        return message;
    }
    toObject() {
        const data: {
            year?: number;
            qualifier_start_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            qualifier_end_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            qualifier_submit_limit?: number;
            final_start_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            final_end_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            final_submit_limit?: number;
        } = {};
        if (this.year != null) {
            data.year = this.year;
        }
        if (this.qualifier_start_at != null) {
            data.qualifier_start_at = this.qualifier_start_at.toObject();
        }
        if (this.qualifier_end_at != null) {
            data.qualifier_end_at = this.qualifier_end_at.toObject();
        }
        if (this.qualifier_submit_limit != null) {
            data.qualifier_submit_limit = this.qualifier_submit_limit;
        }
        if (this.final_start_at != null) {
            data.final_start_at = this.final_start_at.toObject();
        }
        if (this.final_end_at != null) {
            data.final_end_at = this.final_end_at.toObject();
        }
        if (this.final_submit_limit != null) {
            data.final_submit_limit = this.final_submit_limit;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.year != 0)
            writer.writeInt32(3, this.year);
        if (this.has_qualifier_start_at)
            writer.writeMessage(4, this.qualifier_start_at, () => this.qualifier_start_at.serialize(writer));
        if (this.has_qualifier_end_at)
            writer.writeMessage(5, this.qualifier_end_at, () => this.qualifier_end_at.serialize(writer));
        if (this.qualifier_submit_limit != 0)
            writer.writeInt32(6, this.qualifier_submit_limit);
        if (this.has_final_start_at)
            writer.writeMessage(7, this.final_start_at, () => this.final_start_at.serialize(writer));
        if (this.has_final_end_at)
            writer.writeMessage(8, this.final_end_at, () => this.final_end_at.serialize(writer));
        if (this.final_submit_limit != 0)
            writer.writeInt32(9, this.final_submit_limit);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Contest {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Contest();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 3:
                    message.year = reader.readInt32();
                    break;
                case 4:
                    reader.readMessage(message.qualifier_start_at, () => message.qualifier_start_at = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                    break;
                case 5:
                    reader.readMessage(message.qualifier_end_at, () => message.qualifier_end_at = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                    break;
                case 6:
                    message.qualifier_submit_limit = reader.readInt32();
                    break;
                case 7:
                    reader.readMessage(message.final_start_at, () => message.final_start_at = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                    break;
                case 8:
                    reader.readMessage(message.final_end_at, () => message.final_end_at = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                    break;
                case 9:
                    message.final_submit_limit = reader.readInt32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Contest {
        return Contest.deserialize(bytes);
    }
}
export class Group extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        id?: string;
        year?: number;
        role?: Role;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("id" in data && data.id != undefined) {
                this.id = data.id;
            }
            if ("year" in data && data.year != undefined) {
                this.year = data.year;
            }
            if ("role" in data && data.role != undefined) {
                this.role = data.role;
            }
        }
    }
    get id() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set id(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get year() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set year(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get role() {
        return pb_1.Message.getFieldWithDefault(this, 4, Role.CONTESTANT) as Role;
    }
    set role(value: Role) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        id?: string;
        year?: number;
        role?: Role;
    }): Group {
        const message = new Group({});
        if (data.id != null) {
            message.id = data.id;
        }
        if (data.year != null) {
            message.year = data.year;
        }
        if (data.role != null) {
            message.role = data.role;
        }
        return message;
    }
    toObject() {
        const data: {
            id?: string;
            year?: number;
            role?: Role;
        } = {};
        if (this.id != null) {
            data.id = this.id;
        }
        if (this.year != null) {
            data.year = this.year;
        }
        if (this.role != null) {
            data.role = this.role;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.id.length)
            writer.writeString(1, this.id);
        if (this.year != 0)
            writer.writeInt32(3, this.year);
        if (this.role != Role.CONTESTANT)
            writer.writeEnum(4, this.role);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Group {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Group();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.id = reader.readString();
                    break;
                case 3:
                    message.year = reader.readInt32();
                    break;
                case 4:
                    message.role = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Group {
        return Group.deserialize(bytes);
    }
}
export class ScoreHistory extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        group_id?: string;
        score?: number;
        language?: Language;
        created_at?: dependency_1.google.protobuf.Timestamp;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("group_id" in data && data.group_id != undefined) {
                this.group_id = data.group_id;
            }
            if ("score" in data && data.score != undefined) {
                this.score = data.score;
            }
            if ("language" in data && data.language != undefined) {
                this.language = data.language;
            }
            if ("created_at" in data && data.created_at != undefined) {
                this.created_at = data.created_at;
            }
        }
    }
    get group_id() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set group_id(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get score() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set score(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get language() {
        return pb_1.Message.getFieldWithDefault(this, 3, Language.PHP) as Language;
    }
    set language(value: Language) {
        pb_1.Message.setField(this, 3, value);
    }
    get created_at() {
        return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 4) as dependency_1.google.protobuf.Timestamp;
    }
    set created_at(value: dependency_1.google.protobuf.Timestamp) {
        pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_created_at() {
        return pb_1.Message.getField(this, 4) != null;
    }
    static fromObject(data: {
        group_id?: string;
        score?: number;
        language?: Language;
        created_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
    }): ScoreHistory {
        const message = new ScoreHistory({});
        if (data.group_id != null) {
            message.group_id = data.group_id;
        }
        if (data.score != null) {
            message.score = data.score;
        }
        if (data.language != null) {
            message.language = data.language;
        }
        if (data.created_at != null) {
            message.created_at = dependency_1.google.protobuf.Timestamp.fromObject(data.created_at);
        }
        return message;
    }
    toObject() {
        const data: {
            group_id?: string;
            score?: number;
            language?: Language;
            created_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        } = {};
        if (this.group_id != null) {
            data.group_id = this.group_id;
        }
        if (this.score != null) {
            data.score = this.score;
        }
        if (this.language != null) {
            data.language = this.language;
        }
        if (this.created_at != null) {
            data.created_at = this.created_at.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.group_id.length)
            writer.writeString(1, this.group_id);
        if (this.score != 0)
            writer.writeInt32(2, this.score);
        if (this.language != Language.PHP)
            writer.writeEnum(3, this.language);
        if (this.has_created_at)
            writer.writeMessage(4, this.created_at, () => this.created_at.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ScoreHistory {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ScoreHistory();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.group_id = reader.readString();
                    break;
                case 2:
                    message.score = reader.readInt32();
                    break;
                case 3:
                    message.language = reader.readEnum();
                    break;
                case 4:
                    reader.readMessage(message.created_at, () => message.created_at = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ScoreHistory {
        return ScoreHistory.deserialize(bytes);
    }
}
